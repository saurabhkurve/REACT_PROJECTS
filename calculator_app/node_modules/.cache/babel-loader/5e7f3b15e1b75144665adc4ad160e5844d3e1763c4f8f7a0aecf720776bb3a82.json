{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs Vipul Sir\\\\calculator_app\\\\src\\\\component\\\\Cal\\\\Cal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CalWrapper from \"../CalWrapper/CalWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cal = () => {\n  _s();\n  const [inputVal1, setInputVal1] = useState(0);\n  const [operationValue, setOperationValue] = useState(0);\n  const [currentOperation, setCurrentOperation] = useState(\"\");\n  const allBtArr = [{\n    value: 0,\n    btFun: () => {\n      setInputVal1(prev => parseInt(prev.toString() + 0) // Add 0 to the input value\n      );\n    }\n  }, {\n    value: 1,\n    btFun: () => {\n      setInputVal1(prev => parseInt(prev.toString() + 1) // Add 1 to the input value\n      );\n    }\n  }, {\n    value: 2,\n    btFun: () => {\n      setInputVal1(prev => parseInt(prev.toString() + 2) // Add 2 to the input value\n      );\n    }\n  }, {\n    value: 3,\n    btFun: () => {\n      setInputVal1(prev => parseInt(prev.toString() + 3) // Add 3 to the input value\n      );\n    }\n  }, {\n    value: 4,\n    btFun: () => {\n      setInputVal1(prev => parseInt(prev.toString() + 4) // Add 4 to the input value\n      );\n    }\n  }];\n  const operatonArr = [{\n    value: \"+\",\n    btFun: () => {\n      setCurrentOperation(\"+\");\n      setOperationValue(inputVal1);\n      setInputVal1(0);\n    }\n  }, {\n    value: \"-\",\n    btFun: () => {\n      setCurrentOperation(\"-\");\n      setOperationValue(inputVal1);\n      setInputVal1(0);\n    }\n  }, {\n    value: \"=\",\n    btFun: () => {\n      if (currentOperation === \"+\") {\n        setInputVal1(prev => {\n          return prev + operationValue;\n        });\n      } else if (currentOperation === \"-\") {\n        setInputVal1(prev => {\n          return prev + operationValue;\n        });\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This is Cal :\", inputVal1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [operationValue, \" \", currentOperation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalWrapper, {\n      allBtArr: allBtArr,\n      operatonArr: operatonArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Cal, \"TNh43Epwrehk5Q3kNBwEZ5/vQH0=\");\n_c = Cal;\nexport default Cal;\nvar _c;\n$RefreshReg$(_c, \"Cal\");","map":{"version":3,"names":["React","useState","CalWrapper","jsxDEV","_jsxDEV","Cal","_s","inputVal1","setInputVal1","operationValue","setOperationValue","currentOperation","setCurrentOperation","allBtArr","value","btFun","prev","parseInt","toString","operatonArr","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactJs Vipul Sir/calculator_app/src/component/Cal/Cal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CalWrapper from \"../CalWrapper/CalWrapper\";\r\n\r\nconst Cal = () => {\r\n\r\n  const [inputVal1, setInputVal1] = useState(0);\r\n  const [operationValue, setOperationValue] = useState(0);\r\n  const [currentOperation, setCurrentOperation] = useState(\"\");\r\n  \r\n  const allBtArr = [\r\n    {\r\n      value: 0,\r\n      btFun: () => {\r\n        setInputVal1((prev) => (\r\n          parseInt(prev.toString() + 0)) // Add 0 to the input value\r\n       );\r\n      },\r\n    },\r\n    {\r\n      value: 1,\r\n      btFun: () => {\r\n        setInputVal1((prev) => (\r\n          parseInt(prev.toString() + 1)) // Add 1 to the input value\r\n       );\r\n      },\r\n    },\r\n    {\r\n      value: 2,\r\n      btFun: () => {\r\n        setInputVal1((prev) => (\r\n          parseInt(prev.toString() + 2)) // Add 2 to the input value\r\n       );\r\n      },\r\n    },\r\n    {\r\n      value: 3,\r\n      btFun: () => {\r\n        setInputVal1((prev) => (\r\n           parseInt(prev.toString() + 3)) // Add 3 to the input value\r\n        );\r\n      },\r\n    },\r\n    {\r\n      value: 4,\r\n      btFun: () => {\r\n        setInputVal1((prev) => (\r\n          parseInt(prev.toString() + 4)) // Add 4 to the input value\r\n       );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const operatonArr = [\r\n    {\r\n      value: \"+\",\r\n      btFun: () => {\r\n       setCurrentOperation(\"+\");\r\n       setOperationValue(inputVal1)\r\n       setInputVal1(0)\r\n      },\r\n    },\r\n    {\r\n      value: \"-\",\r\n      btFun: () => {\r\n       setCurrentOperation(\"-\");\r\n       setOperationValue(inputVal1)\r\n       setInputVal1(0)\r\n      },\r\n    },\r\n    {\r\n      value: \"=\",\r\n      btFun: () => {\r\n       if(currentOperation === \"+\"){\r\n          setInputVal1((prev) =>{\r\n            return prev + operationValue;\r\n          })\r\n       }else if(currentOperation === \"-\"){\r\n        setInputVal1((prev) =>{\r\n          return prev + operationValue;\r\n        })\r\n       }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <p>This is Cal :{inputVal1}</p>\r\n      <p>{operationValue} {currentOperation}</p>\r\n      <CalWrapper allBtArr={allBtArr} operatonArr={operatonArr}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMY,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA,CAAA,KAAM;MACXP,YAAY,CAAEQ,IAAI,IAChBC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;MAClC,CAAC;IACF;EACF,CAAC,EACD;IACEJ,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA,CAAA,KAAM;MACXP,YAAY,CAAEQ,IAAI,IAChBC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;MAClC,CAAC;IACF;EACF,CAAC,EACD;IACEJ,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA,CAAA,KAAM;MACXP,YAAY,CAAEQ,IAAI,IAChBC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;MAClC,CAAC;IACF;EACF,CAAC,EACD;IACEJ,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA,CAAA,KAAM;MACXP,YAAY,CAAEQ,IAAI,IACfC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;MAClC,CAAC;IACH;EACF,CAAC,EACD;IACEJ,KAAK,EAAE,CAAC;IACRC,KAAK,EAAEA,CAAA,KAAM;MACXP,YAAY,CAAEQ,IAAI,IAChBC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;MAClC,CAAC;IACF;EACF,CAAC,CACF;EAED,MAAMC,WAAW,GAAG,CAClB;IACEL,KAAK,EAAE,GAAG;IACVC,KAAK,EAAEA,CAAA,KAAM;MACZH,mBAAmB,CAAC,GAAG,CAAC;MACxBF,iBAAiB,CAACH,SAAS,CAAC;MAC5BC,YAAY,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EACD;IACEM,KAAK,EAAE,GAAG;IACVC,KAAK,EAAEA,CAAA,KAAM;MACZH,mBAAmB,CAAC,GAAG,CAAC;MACxBF,iBAAiB,CAACH,SAAS,CAAC;MAC5BC,YAAY,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EACD;IACEM,KAAK,EAAE,GAAG;IACVC,KAAK,EAAEA,CAAA,KAAM;MACZ,IAAGJ,gBAAgB,KAAK,GAAG,EAAC;QACzBH,YAAY,CAAEQ,IAAI,IAAI;UACpB,OAAOA,IAAI,GAAGP,cAAc;QAC9B,CAAC,CAAC;MACL,CAAC,MAAK,IAAGE,gBAAgB,KAAK,GAAG,EAAC;QACjCH,YAAY,CAAEQ,IAAI,IAAI;UACpB,OAAOA,IAAI,GAAGP,cAAc;QAC9B,CAAC,CAAC;MACH;IACD;EACF,CAAC,CACF;EAED,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAG,eAAa,EAACb,SAAS;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BpB,OAAA;MAAAgB,QAAA,GAAIX,cAAc,EAAC,GAAC,EAACE,gBAAgB;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CpB,OAAA,CAACF,UAAU;MAACW,QAAQ,EAAEA,QAAS;MAACM,WAAW,EAAEA;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzFID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2FT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}